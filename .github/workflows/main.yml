# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch

on:
  release:
    types:
      - published
#   push:
#    branches: [ master ]
#     tags:
#     - '*'
#  pull_request:
#    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: prereq
      run: sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt-get -y install subversion build-essential libncurses5-dev zlib1g-dev gawk git ccache gettext libssl-dev xsltproc zip file wget

    # Runs a set of commands using the runners shell
    - name: Build
      run: |
        git clone -b v21.02.0-rc4 --depth 1 https://git.openwrt.org/openwrt/openwrt.git 
        cd openwrt

        ./scripts/feeds update -a
        ./scripts/feeds install -a

        git clone https://github.com/yazdan/tun2socks-Openwrt
        cp -rf tun2socks-Openwrt/badvpn package/
        rm -rf tun2socks-Openwrt/

        wget https://downloads.openwrt.org/releases/21.02.0-rc4/targets/ramips/mt7620/config.buildinfo -O .config
        sed -i "/CONFIG_TARGET_DEVICE/d" .config
        sed -i "/CONFIG_TARGET_ALL_PROFILES/d" .config
        sed -i "/CONFIG_AUTOREMOVE/d" .config
        sed -i "/CONFIG_BUILDBOT/d" .config
        sed -i "/CONFIG_IB/d" .config
        sed -i "/CONFIG_SDK/d" .config
        cat ../1.config >> .config
        make defconfig
        sed -i 's/-Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc/-O2 -pipe -mno-branch-likely -mips32r2 -march=24kec -mtune=24kec -mdsp -frename-registers -fweb /g' .config
        sed -i "/^CONFIG_CPU_TYPE=\"24kc\"/c\CONFIG_CPU_TYPE=\"24kec+mdsp\"" .config
        
        #kernel optimization flags
        export KCFLAGS=" -mips32r2 -mtune=24kec -ffast-math -frename-registers -fweb "

        make download -j14
        make -j5
        zip -r -9  ../binaries bin

    - name: "Get upload_url"
      run: echo "::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}"  
      id: release
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: binaries.zip
        asset_name: binaries.zip
        asset_content_type: application/zip
    - name: Upload Release Asset
      id: upload-release-asset2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: openwrt/bin/targets/ramips/mt7620/openwrt-21.02.0-rc4-ramips-mt7620-tplink_c2-v1-squashfs-sysupgrade.bin
        asset_name: openwrt-ramips-mt7620-tplink_c2-v1-squashfs-sysupgrade.bin
        asset_content_type: application/octet-stream
#         asset_content_type: application/bin
#     - name: Upload build artifacts
#       uses: actions/upload-artifact@v2
#       with:
#         name: Binaries
#         path: |
#           binaries.*
#           openwrt/bin/targets/ramips/mt7620/*-sysupgrade.bin

